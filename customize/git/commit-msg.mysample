#!/usr/bin/env python3
####################################################################################################
#Script Name	: commit-msg                                                                                             
#Description	: A git hook script to check the commit log message.
# 		  This script is called by "git commit" with one argument, the name of the file
# 		  that has the commit message.  The hook should exit with non-zero
# 		  status after issuing an appropriate message if it wants to stop the
# 		  commit.  The hook is allowed to edit the commit message file.
#                                                                                 
#Args           : The name of the termporal file that contains the commit log message.
#Author       	: Francisco GÃ¼emes                                                
#Email         	: francisco@franciscoguemes.com         
#See also	    : https://reflectoring.io/meaningful-commit-messages/
#                 https://stackoverflow.com/questions/7063420/perl-compatible-regular-expression-pcre-in-python
#		          
#		  	                                  
####################################################################################################

import re
import sys

URL_WIKI="<<URL_OF_YOUR_WIKI_FOR_COMMIT_RULES>>"

# This regex must match the one defined in:
#   Github:
#   Gitlab: Go to the section "Push rules" of the site: YOUR_GITLAB_PROJECT_URL/-/settings/repository#js-push-rules
#
PCRE_REGEX="(^Merge\sbranch\s'.+'\sinto\s'.+'(\n\n.*)*)|(^(fix|chore|doc|feature|test|ci):.+\n\n((.*\n\n*)*\n)*(company\/product\/(backlog|project_1|project_2|project_N|playground)#[\d]+)\n*)"


if __name__ == "__main__":
    with open(sys.argv[1], 'r') as file:
        commit_message = file.read()

        #print(commit_message)

        result = re.match(PCRE_REGEX, commit_message)

        if not result:
            print(f"Your commit mesage do not adjust to the regex specified in the project: {repr(PCRE_REGEX)}")
            print(f"\t+ More information about the push rules at: {URL_WIKI}")
            exit(1)









